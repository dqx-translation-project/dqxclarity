---
name: "dev-pre-release"

on:
  push:
    branches:
      - test-action

jobs:
  dev-pre-release:
    name: 'Dev pre-release'
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Checkout dqx-translation-project/dqx_translations
        uses: actions/checkout@v3
        with:
          repository: 'dqx-translation-project/dqx_translations'
          path: 'dqx_translations'
      - name: Checkout dqx-translation-project/dqx-custom-translations
        uses: actions/checkout@v3
        with:
          repository: "dqx-translation-project/dqx-custom-translations"
          path: 'dqx-custom-translations'
      - name: Update GITHUB_ENV env
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV;
          echo "CURRENT_TAG=`git describe --tags main | cut -d'-' -f1" >> $GITHUB_ENV;
          echo $CURRENT_TAG;
      # - name: Build dev pre-release package
      #   run: |
      #     rsync -av --exclude="imgs/" app/* dqxclarity/;
      #     cp version.update requirements.txt user_settings.ini dqxclarity/;
      #     cp clarity_dialog.db dqxclarity/misc_files;
      #     cp -fr dqx-custom-translations/json/* dqxclarity/misc_files;
      #     cp -f dqx-custom-translations/csv/glossary.csv dqxclarity/misc_files;
      #     cp -f dqx_translations/json/_lang/en/eventTextSysQuestaClient.json dqxclarity/misc_files;
      #     cp -f dqx_translations/json/_lang/en/subPackage05Client.json dqxclarity/misc_files;
      #     cp -f dqx_translations/json/_lang/en/subPackage41Client.win32.json dqxclarity/misc_files;
      #     cp -f dqx_translations/json/_lang/en/subPackage02Client.win32.json dqxclarity/misc_files;
      #     cp -f dqx_translations/json/_lang/en/smldt_msg_pkg_NPC_DB.win32.json dqxclarity/misc_files;
      #     zip -r dqxclarity-dev-$SHORT_SHA.zip dqxclarity
      # - name: Creating dev release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: dqxclarity-dev-${{ env.SHORT_SHA }}.zip
      #     prerelease: true
      #     tag_name: v${{ env.CURRENT_TAG }}-dev
      #     name: "Dev Build: ${{ env.CURRENT_TAG }}-dev-${{ env.SHORT_SHA }}"
      #     body: "This is a pre-release build! You don't want to download this!"
