# (script 0.2.1)
#   if you open the IDX file, the script will use it for extracting the data from the DAT ones.
#   if you open the DAT file, the script will extract all the archive files inside it.
# script for QuickBMS http://quickbms.aluigi.org

comtype deflate

get EXT extension
if EXT == "bin"
    filexor "0x53 0x51 0x45 0x58"   # SQEX
    get SIZE asize
    get NAME basename
    string NAME += ".wmv"
    log NAME 0 SIZE
    cleanexit
endif
if EXT != "idx"
    # reopen the file on filenum 1
    get NAME filename
    open FDSE NAME 1
    math OFFSET = 0x800
    goto OFFSET 1
    get DAT_SIZE asize 1
endif

math MYDAT_NUM = -1
goto 0x800
for
    if EXT == "idx"
        get DUMMY long
        get DUMMY long
        get OFFSET long
        get DAT_NUM long
        if DAT_NUM == 0xffffffff
            cleanexit
        endif

        if DAT_NUM != MYDAT_NUM
            string DAT_FILE p= "dat%d" DAT_NUM
            open FDDE DAT_FILE 1
            math MYDAT_NUM = DAT_NUM
            get DAT_SIZE asize 1
        endif

        math OFFSET *= 8
        goto OFFSET 1
    endif

    if OFFSET >= DAT_SIZE
        break
    endif
    get HEADER_SIZE long 1
    get DUMMY long 1
    get FILESIZE long 1
    get DUMMY long 1
    get DUMMY long 1
    get CHUNKS long 1
    math OFFSET += HEADER_SIZE
    goto OFFSET 1
    putvarchr MEMORY_FILE FILESIZE 0
    log MEMORY_FILE 0 0
    append
    for CHUNK = 0 < CHUNKS
        get SUB_OFFSET long 1
        get DUMMY long 1
        get ZSIZE long 1
        get SIZE long 1
        math OFFSET += SUB_OFFSET
        if SIZE <= ZSIZE    # yes minor too
            log MEMORY_FILE OFFSET SIZE 1
            math OFFSET += SIZE
        else
            clog MEMORY_FILE OFFSET ZSIZE SIZE 1
            math OFFSET += ZSIZE
        endif
        math OFFSET x= 0x80
        goto OFFSET 1
    next CHUNK
    append
    log "" 0 FILESIZE MEMORY_FILE
next
